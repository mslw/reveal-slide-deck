#+title: Publishing datasets with DataLad
#+author: Michał Szczepanik
#+date: SFB1451 mini-workshop, 23 Nov 2022

#+REVEAL_INIT_OPTIONS: width:1400, height:1000, margin: 0.1, minScale:0.2, maxScale:2.5
#+OPTIONS: toc:nil
#+REVEAL_THEME: beige

#+REVEAL_TITLE_SLIDE: <h1>%t</h1><h2>%s</h2><h3>%a</h3><p>%d</p>

* DataLad in research
** Research process

#+CAPTION: The Turing Way project illustration by Scriberia. Used under a CC-BY 4.0 licence. DOI: 10.5281/zenodo.3332807.
#+ATTR_HTML: :height 600, :width 848
[[./images/datalad-publication-mini-workshop/reproducibility.jpg]]

** What is DataLad

#+begin_quote
To make it short, DataLad is a *software tool developed to aid with
everything related to the evolution of digital objects*.

It is not only keeping track of code, it is not only keeping track of
data, it is not only making sharing, retrieving and linking data (and
metadata) easy, but it assists with the combination of all things
necessary in the digital workflow of data and science.
#+end_quote

[[http://handbook.datalad.org/en/latest/intro/philosophy.html][A brief overview of DataLad]] from DataLad Handbook

* Pillars of DataLad

** Local version control

- Know (record for your future self)
  - when a given file was last changed
  - where it came from
  - what input files were used for a given output
  - what is a short description of changes
- Have freedom of being able to return to a previously recorded state

** Distribution

- keep places (laptop / desktop / remote server) in sync
  - for work, backup or publication
- one interface for multiple, decentralized copies
- collaborate with others
  
** Provenance tracking

- automated run records (what program, inputs, outputs)
- optionally, containerized environments
- re-execution (reproducibility)
- reproducibility strengthens trust

** Metadata

- generic representations
- methods to extract, aggregate, display

* Not just deposition

** Reasons to move data

- backup
- exchange with collaborators
- publish 
- *make known that they exist*

** Data sharing nirvana

- *Where data go to die?* /Data archive./
- *How data are reincarnated?* /Re-used from archives./
- *What makes re-use inconvenient?*: /Data bugs, ad hoc data access, crafty data format/organisation/
-- Yaroslav Halchenko, [[https://datasets.datalad.org/centerforopenneuroscience/talks/2022-tx-big-neuroscience.html][Towards the Big Data Neuroscience Nirvana]]

** Sharing begins at home

#+begin_quote
Despite increasing efforts to encourage data sharing, both the
*quality of shared data and the frequency of data reuse remain
stubbornly low*. We argue here that a significant reason for this
unfortunate state of affairs is that the organization of research
results in the Findable, Accessible, Interoperable, and Reusable
(FAIR) form required for reuse is *too often deferred to the end of a
research project*, when preparing for publication—by which time
essential details are no longer accessible.
#+end_quote

Dempsey /et al./ (2022), [[https://doi.org/10.1162/99608f92.44d21b86][Sharing Begins at Home: How Continuous and Ubiquitous FAIRness Can Enhance Research Productivity and Data Reuse]], Harvard Data Science Review

* DataLad features

** Everything is explicit

#+begin_src 
datalad save -m "I made this"
datalad push --to gin
#+end_src

** Everything is versioned

#+begin_src
❱ git log --pretty=reference
2e98e2c ([DATALAD RUNCMD] Convert to greyscale, 2022-05-23)
545bc9a (Add an image processing script, 2022-05-23)
d9898ad (Add sidecar metadata to photos, 2022-05-23)
#+end_src

"Your dataset is 1 commit ahead, 2 commits behind"

No ambiguity

** Lightweight datasets (annex content separation)

#+CAPTION: Share datasets without content (metadata) to balance privacy and visibility (drawing: Stephan Heunis)
[[./images/datalad-publication-mini-workshop/lightweight-datasets.png]]

** Decentralization built in

[[./images/datalad-publication-mini-workshop/drawing-distributed.png]]

#+begin_src
  datalad clone git@gitlab...
  git annex whereis this/file.dat
     -- usb drive #02
     -- sciebo
     -- gin
#+end_src
